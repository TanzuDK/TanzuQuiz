services:
  postgres:
    image: postgres:14
    restart: unless-stopped
    container_name: db
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d quiz -U tanzu" ]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - ./local_db.env
    volumes:
      - db:/var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    env_file:
      - ./local_pgadmin.env
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - 8080:8080
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:8080/api/healthchecker || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    env_file:
      - ./local_db.env
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - api
    ports:
      - 8888:8888
    restart: unless-stopped

volumes:
  db:
  pgadmin-data:
